from aiogram import Router, Bot
from aiogram.filters import Command, or_f, CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from aiomysql import Pool

from Database.database import user_active_mask
from FSM.Shop import ShopStates
from Keyboards.user_kb import mask_kb, inventory_section_kb
from Services.game_logic import get_balance, get_scores, calculate_new_growth, game_dice, gather_all_items, \
    get_my_masks, get_my_boosts
from Services.view_logic import view_table

user_messages = Router()


@user_messages.message(CommandStart())
async def start_handler(message: Message):
    await message.answer(
        f"üéÆ –ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É! –ì–æ—Ç–æ–≤ –∏—Å–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É –∏ –ø–æ–∫–∞–∑–∞—Ç—å, –∫—Ç–æ —Ç—É—Ç —Ç–æ–ø?\n"
        "–í–≤–µ–¥–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã!"
    )


@user_messages.message(Command('help'))
async def help_command(message: Message):
    commands_text = """
<b>/start</b> ‚Äì Start the game üéÆ  
<b>/dick</b> ‚Äì Increase your size randomly üòè  
<b>/game</b> ‚Äì Play a mini-game to reduce cooldown ‚è≥  
<b>/global_top</b> ‚Äì View the global leaderboard üåç  
<b>/chat_top</b> ‚Äì View the top players in this chat üí¨  
<b>/shop</b> ‚Äì Open the shop: buy masks & boosts üè™  
<b>/balance</b> ‚Äì Check your coin balance üí∞  
<b>/profile</b> ‚Äì Show all your masks üé≠  
<b>/inventory</b> ‚Äì Manage and equip boosts/masks üéí  

"""
    await message.answer(commands_text, parse_mode="HTML")


@user_messages.message(Command('balance'))
async def balance_command(message: Message, dp_pool: Pool, user_id: int):
    coins = await get_balance(dp_pool, user_id)
    await message.answer(f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {coins} –º–æ–Ω–µ—Ç ü™ô")


@user_messages.message(or_f(Command('dick'), Command('penis')))
async def grow_penis(message: Message, bot: Bot, dp_pool: Pool, chat_id: int, user_id: int, now: int):
    await calculate_new_growth(message=message,
                               bot=bot,
                               dp_pool=dp_pool,
                               user_id=user_id,
                               chat_id=chat_id,
                               now=now)


@user_messages.message(Command("global_top"))
async def show_global_top(message: Message, dp_pool: Pool):
    rows = await get_scores(dp_pool)
    await view_table(message, rows)


@user_messages.message(Command("chat_top"))
async def show_global_top(message: Message, dp_pool: Pool, chat_id: int):
    rows = await get_scores(dp_pool, chat_id)
    await view_table(message, rows)


@user_messages.message(Command("game"))
async def handle_dice(message: Message, bot: Bot, dp_pool: Pool, user_id: int, chat_id: int, now: int):
    await game_dice(bot=bot,
                    chat_id=chat_id,
                    user_id=user_id,
                    dp_pool=dp_pool,
                    message=message,
                    now=now)


@user_messages.message(Command("shop"))
async def handle_shop(message: Message, dp_pool: Pool, user_id: int, state: FSMContext):
    await message.answer(f"üè™<i>–ú–∞–≥–∞–∑–∏–Ω</i>: {await get_balance(dp_pool=dp_pool, user_id=user_id)} ü™ô\n"
                         f"<i>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –º–∞–≥–∞–∑–∏–Ω–∞:<b> –ú–∞—Å–∫–∏ | –£—Å–∫–æ—Ä–µ–Ω–∏–µ </b></i>", parse_mode="HTML",
                         reply_markup=mask_kb(page=1))  # ‚úÖ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    await state.set_state(ShopStates.main)

    # try:
    #     # –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    #     bot.edit_message_text("Welcome to the Shop! Choose a mask to buy:", chat_id=message.chat.id,
    #                           message_id=message.message_id, reply_markup=markup)
    # except Exception as e:
    #     # –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, –æ—Ç–ø—Ä–∞–≤–∏–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    #     print(f"Error editing message: {e}")
    #     bot.send_message(message.chat.id, "Welcome to the Shop! Choose a mask to buy:", reply_markup=markup)


@user_messages.message(Command("profile"))
async def handle_shop(message: Message, dp_pool, user_id, full_name):
    suitcase = await gather_all_items(dp_pool, user_id)
    await message.answer(
        f'<i><a href="tg://user?id={user_id}">{full_name}</a> –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–≤–æ–π üß≥–ß–µ–º–æ–¥–∞–Ω:\n\n'
        f'–ú–∞—Å–∫–∏:  {suitcase or "–ø—É—Å—Ç–æ üò¢"}</i>',
        parse_mode="HTML"
    )


@user_messages.message(Command("inventory"))
async def handle_inventory(message: Message, dp_pool, full_name, user_id):
    masks = await get_my_masks(dp_pool, user_id)
    balance = await get_balance(dp_pool, user_id)
    active_mask = user_active_mask.get(user_id, 'üö´')
    kb = inventory_section_kb(masks, "–ú–∞—Å–∫–∏", is_mask=True, user_id=user_id)
    await message.answer(
        f'<i><a href="tg://user?id={user_id}">{full_name}</a> –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–≤–æ–π üß≥–ß–µ–º–æ–¥–∞–Ω:\n–ë–∞–ª–∞–Ω—Å: {balance} ü™ô\n–ú–∞—Å–∫–∞: {active_mask}\n\n–í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å–Ω—É—é –º–∞—Å–∫—É, —á—Ç–æ–±—ã –æ–Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–ª–∞—Å—å —Ä—è–¥–æ–º —Å —Ç–≤–æ–∏–º –∏–º–µ–Ω–µ–º –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ. –ü–æ–∫–∞–∂–∏ —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑!</i>',
        parse_mode="HTML", reply_markup=kb)
