from aiogram.types import Message


async def view_table(message: Message, rows):
    if rows:
        masked_rows = [(row[0], row[1]) for row in rows]
        await message.answer(f"üìù <b>üèÜ Hall of Fame: </b>\n\n{show_table(masked_rows)}", parse_mode='HTML')

    else:
        await message.answer("üö´ –í –±–∞–∑–µ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")


def show_table(table):
    return "\n".join(
        [f"{reward(i + 1)} {i + 1}. <b>{row[0]}</b>: <b>{row[1]} —Å–º</b>" for i, row in enumerate(table)]
    )


def reward(place):
    return ["ü•á", "ü•à", "ü•â", "üéó"][min(place - 1, 3)]


def mask_name(username, user_id):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —ç–º–æ–¥–∑–∏ –∏–ª–∏ –º–∞—Å–∫—É –ø–µ—Ä–µ–¥ –Ω–∏–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    pass

    # # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –º–∞—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    # conn = sqlite3.connect('dick_bot.db')
    # cursor = conn.cursor()
    # cursor.execute("SELECT active_mask FROM info WHERE user = ?", (user,))
    # active_mask = cursor.fetchone()
    # conn.close()
    #
    # # –ï—Å–ª–∏ –º–∞—Å–∫–∞ –Ω–∞–π–¥–µ–Ω–∞, –¥–æ–±–∞–≤–ª—è–µ–º –µ—ë –ø–µ—Ä–µ–¥ –∏–º–µ–Ω–µ–º
    # if active_mask and active_mask[0]:
    #     return f"{active_mask[0]} {name}"
    # else:
    #     # –ï—Å–ª–∏ –º–∞—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–º—è
    #     return f"{name}"
